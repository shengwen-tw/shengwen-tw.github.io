{"version":3,"file":"component---gatsby-theme-academic-src-templates-post-post-jsx-content-file-path-content-research-puyuma-index-md-5b934f4dd29a1b69fcf6.js","mappings":"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","sources":["webpack://example/./content/research/puyuma/index.md","webpack://example/../gatsby-theme-academic/src/templates/post/post.jsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, {\n    id: \"overview\"\n  }, React.createElement(_components.a, {\n    \"aria-hidden\": \"true\",\n    tabIndex: \"-1\",\n    href: \"#overview\"\n  }, React.createElement(_components.span, {\n    className: \"icon icon-link\"\n  })), \"Overview\"), \"\\n\", React.createElement(\"iframe\", {\n    src: \"https://www.youtube.com/embed/P3fH8zuRZhs\",\n    width: \"100%\",\n    height: \"500px\",\n    title: \"Puyuma self-driving system: Lane visualization\",\n    frameborder: \"0\",\n    allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\",\n    referrerpolicy: \"strict-origin-when-cross-origin\",\n    allowfullscreen: true\n  }), \"\\n\", React.createElement(\"iframe\", {\n    src: \"https://www.youtube.com/embed/84MXc0_F61o\",\n    width: \"100%\",\n    height: \"500px\",\n    title: \"Puyuma self-driving system - lane following control\",\n    frameborder: \"0\",\n    allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\",\n    referrerpolicy: \"strict-origin-when-cross-origin\",\n    allowfullscreen: true\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/shengwen-tw.github.io/shengwen-tw.github.io/example/content/research/puyuma/index.md\";\nimport {useLocation} from '@gatsbyjs/reach-router';\nimport {graphql} from 'gatsby';\nimport {GatsbyImage, getImage} from 'gatsby-plugin-image';\nimport moment from 'moment';\nimport React, {useState, useEffect, useContext} from 'react';\nimport {Panel, Row, Col, Input, Message, FlexboxGrid, InputGroup, Grid} from 'rsuite';\nimport nacl from 'tweetnacl';\nimport naclUtil from 'tweetnacl-util';\nimport CodeBox from '../../components/CodeBox';\nimport Comment from '../../components/Comment';\nimport SEO from '../../components/Seo';\nimport Context from '../../utils/context';\nimport {useSiteMetadata} from '@/utils/hooks';\nimport Utils from '../../utils/pageUtils.mjs';\nimport './highlight-syntax.less';\nimport Icon from '@/components/Icon';\nfunction Post({data: {mdx}, children}) {\n  const {fields: {slug: {html, nonce, htmlEncrypted, title, excerpt, path, date, commit, type}}, frontmatter: {cover}, tableOfContents} = mdx;\n  const editTime = moment.unix(commit).format('MMM Do YYYY');\n  const postTime = Utils.formatDate(date);\n  const image = cover ? getImage(cover) : null;\n  const siteMetadata = useSiteMetadata();\n  const canonicalUrl = Utils.generateFullUrl(siteMetadata, path);\n  console.log(nonce);\n  const [state, setState] = useState({\n    locked: nonce !== '',\n    failed: false,\n    html\n  });\n  const [passwordVisible, setPasswordVisible] = React.useState(false);\n  const [password, setPassword] = React.useState('');\n  const handlePasswordVisibleChange = () => {\n    setPasswordVisible(!passwordVisible);\n  };\n  const handlePasswordChange = value => {\n    setPassword(value);\n  };\n  const onUnlock = () => {\n    if (state.locked) {\n      try {\n        const passwordDecoded = naclUtil.decodeUTF8(password);\n        const nonceBuffer = naclUtil.decodeBase64(nonce);\n        const keyBuffer = nacl.hash(passwordDecoded).slice(0, nacl.secretbox.keyLength);\n        const box = naclUtil.decodeBase64(htmlEncrypted);\n        const htmlBuffer = nacl.secretbox.open(box, nonceBuffer, keyBuffer);\n        const htmlReal = naclUtil.encodeUTF8(htmlBuffer);\n        setState({\n          locked: false,\n          failed: false,\n          html: htmlReal\n        });\n      } catch (e) {\n        setState({\n          locked: true,\n          failed: true,\n          html: ''\n        });\n      }\n    }\n  };\n  const time = [];\n  if (postTime) {\n    time.push(`Posted: ${postTime}`);\n  }\n  if (commit > 0 && postTime !== editTime) {\n    time.push(`Edited: ${editTime}`);\n  }\n  const context = useContext(Context);\n  const location = useLocation();\n  useEffect(() => {\n    if (context && context.setState && Object.getOwnPropertyNames(tableOfContents).length) {\n      context.setState({\n        tableOfContents,\n        pathname: location.pathname\n      });\n    }\n  }, []);\n  const EncryptedBody = () => {\n    return state.locked ? React.createElement(Panel, {\n      description: \"\"\n    }, React.createElement(Grid, {\n      fluid: true\n    }, React.createElement(Row, {\n      justify: \"center\",\n      type: \"flex\"\n    }, React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: 24,\n      lg: 16,\n      xl: 12\n    }, state.failed ? React.createElement(Message, {\n      type: \"error\"\n    }, \"Wrong password! Please try again.\") : React.createElement(Message, {\n      type: \"info\"\n    }, \"This article is encrypted by xsalsa20-poly1305 algorithm.\"), React.createElement(InputGroup, {\n      style: {\n        marginTop: '1rem'\n      }\n    }, React.createElement(Input, {\n      type: passwordVisible ? 'text' : 'password',\n      value: password,\n      placeholder: \"Enter password to unlock this article.\",\n      onPressEnter: onUnlock,\n      onChange: handlePasswordChange,\n      size: \"lg\"\n    }), React.createElement(InputGroup.Button, {\n      onClick: handlePasswordVisibleChange\n    }, passwordVisible ? React.createElement(Icon, {\n      icon: \"eye\"\n    }) : React.createElement(Icon, {\n      icon: \"eye-slash\"\n    }))))))) : React.createElement(\"article\", {\n      className: \"markdown-body\"\n    }, children);\n  };\n  const PublicBody = () => {\n    return React.createElement(\"article\", {\n      className: \"markdown-body\"\n    }, children);\n  };\n  return React.createElement(React.Fragment, null, React.createElement(SEO, {\n    title: title,\n    description: excerpt,\n    path: path,\n    keywords: ['FullStack developer', 'Javascript', 'ReactJS', 'NodeJS', 'Gatsby', 'technology']\n  }), React.createElement(\"div\", null, React.createElement(\"div\", {\n    className: \"marginTopTitle\"\n  }, React.createElement(\"h1\", {\n    className: \"titleSeparate\"\n  }, title)), React.createElement(\"div\", {\n    style: {\n      color: 'var(--rs-text-tertiary)',\n      marginBottom: '1rem'\n    }\n  }, time.join(', ')), React.createElement(FlexboxGrid, {\n    style: {\n      marginBottom: '1rem'\n    }\n  }), nonce === '' ? React.createElement(PublicBody) : React.createElement(EncryptedBody)), type === 'posts' ? React.createElement(\"div\", {\n    style: {\n      marginTop: '2rem'\n    }\n  }, React.createElement(Comment, {\n    pageCanonicalUrl: canonicalUrl,\n    pageId: title\n  })) : null);\n}\nexport const pageQuery = graphql`\n  query($contentFilePath: String!) {\n    mdx(internal: { contentFilePath: { eq: $contentFilePath } }) {\n      tableOfContents\n      frontmatter {\n        cover {\n          childImageSharp {\n            gatsbyImageData(\n              layout: CONSTRAINED\n              width: 1000\n            )\n          }\n        }\n      }\n      fields {\n        slug {\n          html\n          htmlEncrypted\n          nonce\n          timeToRead\n          title\n          date\n          tags\n          path\n          excerpt\n          links { \n            name\n            url\n          }\n          commit\n          type\n        }\n      }\n      internal {\n        contentFilePath\n      }\n    }\n  }\n`;\nPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Post, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","a","span","_provideComponents","components","React","id","tabIndex","href","className","src","width","height","title","frameborder","allow","referrerpolicy","allowfullscreen","wrapper","MDXLayout","Post","_ref","data","mdx","children","fields","slug","html","nonce","htmlEncrypted","excerpt","path","date","commit","type","frontmatter","cover","tableOfContents","editTime","moment","format","postTime","Utils","formatDate","siteMetadata","getImage","useSiteMetadata","canonicalUrl","generateFullUrl","console","log","state","setState","useState","locked","failed","passwordVisible","setPasswordVisible","password","setPassword","handlePasswordVisibleChange","handlePasswordChange","value","onUnlock","passwordDecoded","naclUtil","nonceBuffer","keyBuffer","nacl","slice","keyLength","box","htmlBuffer","open","htmlReal","e","time","push","context","useContext","Context","location","useLocation","useEffect","getOwnPropertyNames","length","pathname","EncryptedBody","Panel","description","Grid","fluid","Row","justify","Col","xs","sm","md","lg","xl","Message","InputGroup","style","marginTop","Input","placeholder","onPressEnter","onChange","size","Button","onClick","Icon","icon","PublicBody","SEO","keywords","color","marginBottom","join","FlexboxGrid","Comment","pageCanonicalUrl","pageId","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}